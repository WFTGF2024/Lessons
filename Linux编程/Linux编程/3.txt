#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <dirent.h>

#define MAX_PATH_LENGTH 1024

int main() {
    char newDir[MAX_PATH_LENGTH];
    // 提示用户输入目录路径
    printf("请输入要切换到的目录路径: ");
    // 使用scanf接收用户输入，限制输入长度防止缓冲区溢出
    if (scanf("%1023s", newDir)!= 1) {
        perror("输入读取失败");
        return 1;
    }

    // 简单的输入合法性校验，判断路径是否为空字符串
    if (strlen(newDir) == 0) {
        fprintf(stderr, "输入的目录路径不能为空，请重新输入。\n");
        return 1;
    }

    // 改变当前工作目录
    if (chdir(newDir) == -1) {
        perror("chdir failed");
        return 1;
    }

    char currentDir[MAX_PATH_LENGTH];
    if (getcwd(currentDir, sizeof(currentDir))!= NULL) {
        printf("当前工作目录已切换为: %s\n", currentDir);
    } else {
        perror("获取当前工作目录失败");
        return 1;
    }

    // 遍历并打印新工作目录下的所有文件和子目录
    DIR *dir;
    struct dirent *ent;
    dir = opendir(".");  // 当前工作目录（也就是已切换后的目录）
    if (dir!= NULL) {
        while ((ent = readdir(dir))!= NULL) {
            printf("%s\n", ent->d_name);
        }
        closedir(dir);
    } else {
        perror("无法打开目录");
        return 1;
    }

    return 0;
}